@using DataLayer
@model DataLayer.Product

@{
    ViewBag.Title = "Create";
}

<h2>افزودن محصول جدید</h2>

<div class="row">

    @using (Html.BeginForm())
    {   
        <div class="col-md-8">

            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ImageName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="file" name="imageProduct" />
                        @Html.ValidationMessageFor(model => model.ImageName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="ثبت محصول" class="btn btn-success" />
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-4">

            <div class="panel panel-primary">
                <div class="panel-heading">تصویر محصول</div>
                <div class="panel-body text-center">

                    <img id="imgPreviewProduct" class="thumbnails-image thumbnail" src="~/Images/ProductImages/NoImage.jpg"/>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ImageName, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            <input type="file" name="imageProduct" id="imageProduct"/>
                            @Html.ValidationMessageFor(model => model.ImageName, "", new {@class = "text-danger"})
                        </div>
                    </div>
                </div>
            </div>

            <div class="panel panel-primary">
                <div class="panel-heading">انتخاب سرگروه</div>
                <div class="panel-body">
                    @{
                        List<Product_Groups> groups = ViewBag.groups;
                        <ul>
                            @foreach (var group in groups.Where(g=>g.ParentID == null))
                            {
                                <li class="list_none">
                                    <input type="checkbox"/> <span>@group.GroupTitle</span>
                                    
                                    @if (groups.Any(g => g.ParentID == group.GroupID))
                                    {
                                        <ul>
                                            @foreach (var subGroup in groups.Where(g => g.ParentID == group.GroupID))
                                            {
                                                <li>
                                                    <input type="checkbox" name="selectedGroups"  value="@subGroup.GroupID"/> <span>@subGroup.GroupTitle</span>
                                                </li>
                                            }
                                        </ul>
                                    }

                                </li>
                            }
                        </ul>
                    }
                </div>
            </div>

        </div>
    }

</div>
<div>
    @Html.ActionLink("بازگشت به لیست محصولات", "Index")
</div>

@section script
{
    <script>
        function readURL(input) {

            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function(e) {
                    $("#imgPreviewProduct").attr('src', e.target.result);
                }
                reader.readAsDataURL(input.files[0]);
            }
        }

        $("#imageProduct").change(function() {
            readURL(this);
        });
    </script>
}
